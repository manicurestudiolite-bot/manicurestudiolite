/**
 * Normaliza n√∫mero de telefone para formato E.164 (+55DDDNUMBER)
 */
export function normalizePhone(phone: string): string {
  // Remove todos os caracteres n√£o num√©ricos
  const cleaned = phone.replace(/\D/g, '');
  
  // Se j√° come√ßa com 55, assume que est√° correto
  if (cleaned.startsWith('55')) {
    return `+${cleaned}`;
  }
  
  // Se tem 11 d√≠gitos (celular com DDD), adiciona +55
  if (cleaned.length === 11) {
    return `+55${cleaned}`;
  }
  
  // Se tem 10 d√≠gitos (telefone fixo com DDD), adiciona +55
  if (cleaned.length === 10) {
    return `+55${cleaned}`;
  }
  
  // Caso contr√°rio, retorna como est√° (com +)
  return cleaned.startsWith('+') ? cleaned : `+${cleaned}`;
}

/**
 * Valida se um n√∫mero de telefone √© v√°lido para WhatsApp
 */
export function isValidWhatsAppNumber(phone: string): boolean {
  const normalized = normalizePhone(phone);
  // N√∫mero brasileiro v√°lido: +55 + DDD (2 d√≠gitos) + n√∫mero (8 ou 9 d√≠gitos)
  return /^\+55\d{10,11}$/.test(normalized);
}

/**
 * Abre conversa no WhatsApp com mensagem pr√©-preenchida
 */
export function openWhatsApp(phone: string, message: string = ''): void {
  const normalized = normalizePhone(phone);
  const encodedMessage = encodeURIComponent(message);
  const url = `https://wa.me/${normalized.replace('+', '')}${message ? `?text=${encodedMessage}` : ''}`;
  window.open(url, '_blank');
}

/**
 * Gera mensagem padr√£o de confirma√ß√£o de agendamento
 */
export function getAppointmentMessage(
  clientName: string,
  date: string,
  time: string,
  serviceName: string
): string {
  return `Ol√°, ${clientName}! üëã\n\nSeu agendamento est√° confirmado:\nüìÖ Data: ${date}\n‚è∞ Hor√°rio: ${time}\nüíÖ Servi√ßo: ${serviceName}\n\nQualquer d√∫vida, estamos √† disposi√ß√£o!`;
}
